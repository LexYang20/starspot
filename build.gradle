plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.starsopt'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
    maven { url "https://mvn.topobyte.de" }
    maven { url "https://mvn.slimjars.com" }
    maven { url "https://raw.githubusercontent.com/osmlab/maven-repository/master" }
    maven { url "https://packages.confluent.io/maven/" }
    maven { url "https://mvnrepository.com/artifact" }
    maven { url "https://repo.osgeo.org/repository/release/" }
    maven { url "https://repo.boundlessgeo.com/main/" }
}

dependencies {
    implementation 'com.opencsv:opencsv:5.8'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.jsoup:jsoup:1.16.1'

    // 修改Lombok依赖配置
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.projectlombok:lombok'
    implementation 'org.jsoup:jsoup:1.16.1'

    // 添加Spring定时任务依赖
    implementation 'org.springframework.boot:spring-boot-starter-quartz'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'com.mysql:mysql-connector-j:8.0.33'
    implementation 'com.google.firebase:firebase-admin:9.1.1'

    // OSM related dependencies
    implementation 'org.openstreetmap.osmosis:osmosis-core:0.48.3'
    implementation 'de.topobyte:osm4j-core:1.2.0'
    implementation 'org.openstreetmap.osmosis:osmosis-xml:0.48.3'
    implementation 'com.slimjars.trove4j:trove4j-object-int-hash-map:1.0.1'
    implementation 'com.slimjars.trove4j:trove4j-long-hash-set:1.0.1'
    implementation 'com.slimjars.trove4j:trove4j-long-array-list:1.0.1'
    implementation 'com.slimjars.trove4j:trove4j-long-object-hash-map:1.0.1'
    implementation 'org.jsoup:jsoup:1.15.4'

    // Remove these problematic dependencies
    // implementation 'org.openstreetmap.pbf:osmpbf:1.3.3'
    // implementation 'crosby.binary:osmosis-osm-binary:0.48.3'

    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
    testImplementation 'org.awaitility:awaitility:4.2.0'
}

test {
    useJUnitPlatform()
}

tasks.register("buildFrontend", Exec) {
    workingDir = file("src/frontend")
    inputs.files(fileTree("src/frontend"))
    outputs.dir("src/frontend/dist")

    // 根据操作系统选择合适的命令
    if (System.getProperty('os.name').toLowerCase().contains('windows')) {
        commandLine = ['cmd', '/c', 'npm', 'install']
        commandLine = ['cmd', '/c', 'npm', 'run', 'build']
    } else {
        commandLine = ['npm', 'install']
        commandLine = ['npm', 'run', 'build']
    }
}

tasks.register("copyFrontend", Copy) {
    dependsOn "buildFrontend"
    from("src/frontend/dist")
    into("src/main/resources/static")
}

processResources {
    dependsOn "copyFrontend"
    from "src/main/resources/static"
}

bootJar {
    dependsOn "copyFrontend"
}